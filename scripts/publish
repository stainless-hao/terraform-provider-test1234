#!/usr/bin/env -S -- bash -Eeu -O dotglob -O nullglob -O extglob -O failglob -O globstar

set -o pipefail

# Environments
{
  cd -- "$(dirname -- "$0")/.."
  GIT_REPO="${GIT_REPO:-"$(basename -- "$PWD")"}"
  GIT_TAG="$(git describe --tags --abbrev=0)"
  VERSION="${GIT_TAG#v}"
  NAME_PREFIX="${GIT_REPO}_${VERSION}"
  MANIFEST="${NAME_PREFIX}_manifest.json"
  DIST="$PWD/dist"
  SHAFILE="$DIST/${NAME_PREFIX}_SHA256SUMS"
  SIGFILE="$SHAFILE.sig"
}

# Import GPG Key
if [[ -v GPG_SIGNING_PASSWORD ]] && [[ -v GPG_SIGNING_KEY ]]; then
  printenv -- GPG_SIGNING_KEY | gpg --batch --passphrase-fd 3 --import 3<<< "$GPG_SIGNING_PASSWORD"
elif [[ -v CI ]]; then
  printf -- '%s\n' "GPG_SIGNING_PASSWORD, GPG_SIGNING_KEY must be set" >&2
  exit 1
fi

# Build Artifacts
{
  SKIP=(--skip publish)
  if ! [[ -v CI ]]; then
    SKIP+=(--skip validate)
  fi

  goreleaser release --clean "${SKIP[@]}"

  for DIR in "$DIST/"*/*/; do
    ZIP="${DIR%%/}.zip"
    zip --junk-paths --recurse-paths "$ZIP" "$DIR"
    mv -v -- "$ZIP" "$DIR/"
  done
}

# Sign Release
{
  cp -v -- ./terraform-registry-manifest.json "$DIST/$MANIFEST"
  pushd -- "$DIST" > /dev/null
  sha256sum -- "$MANIFEST" *.zip > "$SHAFILE"
  popd > /dev/null
  GPG_FINGERPRINT="${GPG_FINGERPRINT:-"$(gpg --batch --list-keys --with-colons | awk -F : -- '/^pub:/ { getline; print $10 }' | tail -1)"}"
  gpg --batch --pinentry-mode loopback --passphrase-fd 0 --detach-sign --local-user "$GPG_FINGERPRINT" --output "$SIGFILE" -- "$SHAFILE" <<< "$GPG_SIGNING_PASSWORD"
}

# Publish Release
if [[ -v CI ]]; then
  gh release upload --clobber -- "$GIT_TAG" "$DIST/$MANIFEST" "$SHAFILE" "$SIGFILE"
  gh release edit --draft=false -- "$GIT_TAG"
fi
