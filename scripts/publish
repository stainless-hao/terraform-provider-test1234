#!/usr/bin/env bash

set -Eeu
set -o pipefail dotglob nullglob failglob

# Environments
{
  cd -- "$(dirname -- "$0")/.."
  GIT_REPO="${GIT_REPO:-"$(basename -- "$PWD")"}"
  if [[ -z ${CI:-""} ]]; then
    GIT_TAG="$(git describe --tags --abbrev=0)"
  fi
  VERSION="${GIT_TAG#v}"
  NAME_PREFIX="${GIT_REPO}_${VERSION}"
  MANIFEST="${NAME_PREFIX}_manifest.json"
  DIST="$PWD/dist"
  SHAFILE="$DIST/${NAME_PREFIX}_SHA256SUMS"
  SIGFILE="$SHAFILE.sig"
}

# Pipelines
{
  FLAG='release.trigger'
  MAP=(xargs --no-run-if-empty -I % --)
  LIST=(gh release list --limit 99999 --json 'tagName,isPrerelease,createdAt' --jq '.[] | select(.isPrerelease) | { tag: .tagName, time: (.createdAt | fromdateiso8601) }')
  FILTER=(gh release view --json 'tagName,isPrerelease,assets,createdAt' --jq "if .isPrerelease and any(.assets[]; .name == \"$FLAG\") then . else null end" --)
  REMOVE=(gh release delete --yes -- %)
}

# Import GPG Key
if [[ -n ${GPG_SIGNING_PASSWORD:-""} ]] && [[ -n ${GPG_SIGNING_KEY:-""} ]]; then
  printenv -- GPG_SIGNING_KEY | gpg --batch --passphrase-fd 3 --import 3<<< "$GPG_SIGNING_PASSWORD"
elif [[ -n ${CI:-""} ]]; then
  tee -- <<- 'EOF' >&2
GPG_SIGNING_PASSWORD, GPG_SIGNING_KEY must be set
EOF
  exit 1
fi

# Smoke Test
{
  if [[ -n ${CI:-""} ]] && ! TIMESTAMP="$("${FILTER[@]}" "$GIT_TAG" | jq --exit-status --arg tag "$GIT_TAG" 'select(.tag == $tag).time')"; then
    tee -- <<- EOF >&2
Release "$GIT_TAG" is not found in the list of pre-releases
This might have happened because "$GIT_TAG" has been superseded by a later release
EOF
    exit 1
  fi
}

# Build Artifacts
{
  SKIP=(--skip publish)
  if [[ -z ${CI:-""} ]]; then
    SKIP+=(--skip validate)
  fi

  GORELEASER_CURRENT_TAG="$GIT_TAG" goreleaser release --clean "${SKIP[@]}"
}

# Generate Checksum
{
  cp -v -- ./terraform-registry-manifest.json "$DIST/$MANIFEST"
  pushd -- "$DIST" > /dev/null
  sha256sum -- "$MANIFEST" *.zip | tee -- "$SHAFILE" >&2
  popd > /dev/null
}

# Generate Signature
{
  GPG_FINGERPRINT="${GPG_FINGERPRINT:-"$(gpg --batch --list-keys --with-colons | awk -F : -- '/^pub:/ { getline; print $10 }' | tail -1)"}"
  gpg --batch --pinentry-mode loopback --passphrase-fd 0 --detach-sign --local-user "$GPG_FINGERPRINT" --output "$SIGFILE" -- "$SHAFILE" <<< "${GPG_SIGNING_PASSWORD:-""}"
}

# Publish Release
if [[ -n ${CI:-""} ]]; then
  gh release upload --clobber -- "$GIT_TAG" "$DIST/$MANIFEST" "$SHAFILE" "$SIGFILE" "$DIST/"*.zip
  gh release delete-asset --yes -- "$GIT_TAG" "$FLAG"
  gh release edit --verify-tag --prerelease=false --latest -- "$GIT_TAG"
fi

# Clean Failed Releases
if [[ -n ${CI:-""} ]]; then
  TMP="$(mktemp)"
  set -x
  "${LIST[@]}" | "${MAP[@]}" "${FILTER[@]}" % | awk -- '$0 { print }' | jq --argjson time "$TIMESTAMP" 'select(.createdAt | fromdateiso8601 < $time).tag' | tee -- "$TMP" | "${MAP[@]}" "${REMOVE[@]}"
  if [[ -s $TMP ]]; then
    tee -- <<- 'EOF'
The following releases have been cleaned up:
EOF
    nl -- "$TMP"
  fi >&2
fi
